{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/CreateProjectButton.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","CreateProjectButton","Fragment","Link","to","className","style","color","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","md","margin","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","material","label","infinite","append","start_date","end_date","maxWidth","maxHeight","minWidth","minHeight","initialState","project_tasks","project_task","action","filter","projectSequence","booleanActionPayload","combineReducers","backlog","backlogReducer","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updatedProject","projectIndentifier","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","handleChange","newTask","addProjectTask","FormControl","fullWidth","Select","labelId","MenuItem","FormHelperText","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.aedf27c8.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link\r\n        to=\"/addProject\"\r\n        className=\"btn btn-lg scrumBtn scrumBioRhyme\"\r\n        style={{ color: \"#FF8C00\" }}\r\n      >\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import { MDBContainer, MDBCard, MDBCardTitle, MDBBtn, MDBCardGroup, MDBCardImage, MDBCardText, MDBCardBody } from \"mdbreact\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body mb-3 bg-scrummaster\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto scrumSource\">\r\n                {project.projectIdentifier}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8 scrumOffside\">\r\n              <h3>{project.projectName}</h3>\r\n              <p className=\"scrumBioRhyme\">{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block \">\r\n              <ul className=\"list-group \">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board projectScrum\">\r\n                    <i\r\n                      className=\"fa fa-flag-checkered pr-1 scrumLabel\"\r\n                      style={{ color: \"indigo\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Project Board{\" \"}\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board update\">\r\n                    <i\r\n                      className=\"fa fa-edit pr-1 scrumLabel\"\r\n                      style={{ color: \"MidnightBlue\" }}\r\n                    >\r\n                      Update Project Info\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item board delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1 scrumLabel\" style={{ color: \"black\" }}> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import { MDBAnimation, MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    const { checked } = true;\r\n    const { setChecked } = true;\r\n    return (\r\n      <div className=\"projects\">\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol md=\"12 m-auto\" style={{ margin: 0 }}>\r\n              <MDBAnimation className=\"scrumAnimateRubberBand\">\r\n                <h2 className=\"display-2 text-center scrumCharmon\">\r\n                  Kanban Project\r\n                </h2>\r\n                <h1 className=\"display-9 text-center scrumRockSalt\">\r\n                  Scrum As You Are\r\n                </h1>\r\n              </MDBAnimation>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\n// import ToggleSwitch from \"./components/ToggleSwitch\"\r\n// import BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n// import ToggleColorMode from \"./Decoration/darkModeToggleSwitch\";\r\n// import Toggle from 'react-bootstrap-toggle';\r\n// import ToggleColorMode from \"../Decoration/darkModeToggleSwitch\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1 scrumSource\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n          <li >\r\n\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand scrummOffside\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup, MDBAnimation } from \"mdbreact\";\r\n//Work on handling the errors through css\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"projects\">\r\n          <MDBContainer>\r\n            <MDBRow>\r\n              <MDBCol md=\"9\">\r\n                <h5 className=\"display-4 text-center scrumYujiMai\">\r\n                  Create Project form\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <MDBAnimation className=\"scrumFlash\" infinite>\r\n                        <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.projectName}</h1>\r\n                      </MDBAnimation>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier\r\n                      })}\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <MDBAnimation className=\"scrumFlash\" infinite>\r\n                        <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.projectIdentifier}</h1>\r\n                      </MDBAnimation>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput type=\"textarea\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <MDBAnimation className=\"scrumFlash\" infinite>\r\n                        <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.description}</h1>\r\n                      </MDBAnimation>\r\n                    )}\r\n                  </div>\r\n                  <h6 style={{ color: \"YellowGreen\" }}>Start Date</h6>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"date\"\r\n                      className=\"md-form mdb-react-date__picker\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6 style={{ color: \"YellowGreen\" }}>Estimated End Date</h6>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"date\"\r\n                      className=\"md-form mdb-react-date__picker\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '1000px', maxHeight: '50px', minWidth: '30px', minHeight: '45px' }}\r\n                  />\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { DELETE_PROJECT, GET_PROJECTS, GET_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup, MDBAnimation } from \"mdbreact\";\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(updatedProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"projects\">\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol md=\"9\">\r\n              <h5 className=\"display-4 text-center scrumYujiMai\">\r\n                Update Project\r\n              </h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <MDBInput\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.projectName}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <MDBInput\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"ID cannot be changed\"\r\n                    name=\"projectIndentifier\"\r\n                    value={this.state.projectIndentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <MDBInput type=\"textarea\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.description}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <h6 style={{ color: \"Chartreuse\" }}>Start Date</h6>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <MDBInput\r\n                    type=\"date\"\r\n                    className=\"md-form mdb-react-date__picker\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6 style={{ color: \"Chartreuse\" }}>Estimated End Date</h6>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <MDBInput\r\n                    type=\"date\"\r\n                    className=\"md-form mdb-react-date__picker\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '2000px', maxHeight: '50px', minWidth: '50px', minHeight: '45px' }}\r\n                />\r\n              </form>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  // componentDidMount() {\r\n  //   let left = document.getElementById(\"left\");\r\n  //   let right = document.getElementById(\"right\");\r\n  //   dragula([left, right]);\r\n  // }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-dark\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-dark\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-dark\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card text-white bg-light mb-1\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title scrumRobotoTask\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn scrumBtn ml-4\" style={{ maxWidth: '300px', maxHeight: '50px', minWidth: '170px', minHeight: '20px' }}\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn scrumDelBtn ml-4\"\r\n            style={{ maxWidth: '300px', maxHeight: '50px', minWidth: '170px', minHeight: '20px' }}\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-dark\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary scrumRoboto\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div\r\n              className=\"alert text-center  font-weight-bold whatever\"\r\n              role=\"alert\"\r\n            >\r\n              <h4 className=\"alert-heading scrumYujiMai\">\r\n                Stop! Collaborate And Listen\r\n              </h4>\r\n\r\n              <p className=\"mb-0 scrumNunito\">\r\n                You Haven't Created Anything Yet!!\r\n              </p>\r\n              <g className=\"mb-1 scrumFuzzyBubbles2\">\r\n                Create A Task and See Where This Rabbit Hole Goes...\r\n              </g>\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n    return (\r\n      <div className=\"projectBoard\">\r\n        <div className=\"container\">\r\n          <Link\r\n            to={`/addProjectTask/${id}`}\r\n            className=\"btn scrumSubmitBtn mb-3 \"\r\n          >\r\n            <i className=\"fas fa-plus-circle scrumLabel\" style={{ color: \"#000000\" }}>\r\n              {\" \"}\r\n              Create Project Task\r\n            </i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n          {BoardContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup, MDBAnimation } from \"mdbreact\";\r\nimport { styled } from '@mui/material/styles';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { FormHelperText } from \"@mui/material\";\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //handleChange\r\n  handleChange(e) {\r\n    this.setState({ [e.target.value]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"add-PBI\">\r\n          <MDBContainer>\r\n            <MDBRow>\r\n              <MDBCol md=\"12\">\r\n                <Link\r\n                  to={`/projectBoard/${id}`}\r\n                  className=\"btn scrumBtn \"\r\n                  style={{ color: \"#FF8C00\" }}\r\n                >\r\n                  Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center scrumLobster\">\r\n                  Add Project Task\r\n                </h4>\r\n                <p className=\"lead text-center scrumBioRhyme\">\r\n                  Project Name + Project Task ID\r\n                </p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      className={classnames(\r\n                        \"form-control form-control-lg scrumBioRhyme\",\r\n                        {\r\n                          \"is-invalid\": errors.summary,\r\n                        }\r\n                      )}\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Project Task summary\"\r\n                      name=\"summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.summary && (\r\n                      <MDBAnimation className=\"scrumFlash\" infinite>\r\n                        <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.summary}</h1>\r\n                      </MDBAnimation>\r\n                    )}\r\n                    <label style={{ color: \"#98FB98\" }}>\r\n                      Summary\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"textarea\"\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Acceptance Criteria\"\r\n                      name=\"acceptanceCriteria\"\r\n                      value={this.state.acceptanceCriteria}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label style={{ color: \"#98FB98\" }}>\r\n                      Acceptance Criteria\r\n                    </label>\r\n                  </div>\r\n                  <h6 className=\"scrumLabel\" style={{ color: \"#98FB98\" }}>Due Date</h6>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"date\"\r\n                      className=\"md-form mdb-react-date_picker\"\r\n                      name=\"dueDate\"\r\n                      value={this.state.dueDate}\r\n                      onChange={this.onChange}\r\n                      style={{ color: \"#98FB98\" }}\r\n                    />\r\n                  </div>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      labelId=\"scrum-select-label\"\r\n                      id=\"scrum-select\"\r\n                      name=\"priority\"\r\n                      value={this.state.priority}\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <MenuItem value={0} style={{ color: \"white\" }}>\r\n                        Select Priority\r\n                      </MenuItem>\r\n                      <MenuItem value={1} style={{ color: \"firebrick\" }}>HIGH</MenuItem>\r\n                      <MenuItem value={2} style={{ color: \"GoldenRod\" }}>MEDIUM</MenuItem>\r\n                      <MenuItem value={3} style={{ color: \"limegreen\" }}>LOW</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: \"MediumSpringGreen\" }}>Select Priority</FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      labelId=\"scrum-select-status\"\r\n                      id=\"scrum-select\"\r\n                      name=\"status\"\r\n                      value={this.state.status}\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <MenuItem value=\" \" style={{ color: \"firebrick\" }}>\r\n                        Select Status\r\n                      </MenuItem>\r\n                      <MenuItem value=\"TO_DO\" style={{ color: \"GoldenRod\" }}>TO DO</MenuItem>\r\n                      <MenuItem value=\"IN_PROGRESS\" style={{ color: \"DodgerBlue\" }}>IN PROGRESS</MenuItem>\r\n                      <MenuItem value=\"DONE\" style={{ color: \"Green\" }}>DONE</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: \"MediumSpringGreen\" }}>Select Status</FormHelperText>\r\n                  </FormControl>\r\n                  <input\r\n                    type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '2000px', maxHeight: '50px', minWidth: '50px', minHeight: '45px' }}\r\n                  />\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);","import classnames from \"classnames\";\r\nimport { MDBAnimation, MDBCol, MDBContainer, MDBInput, MDBRow } from \"mdbreact\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask, updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport NativeSelect from '@mui/material/NativeSelect';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { FormHelperText } from \"@mui/material\";\r\nimport InputLabel from '@mui/material/InputLabel';\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //handleChange\r\n  handleChange(e) {\r\n    this.setState({ [e.target.value]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"add-PBI\">\r\n          <MDBContainer>\r\n            <MDBRow>\r\n              <MDBCol md=\"12\">\r\n                <Link\r\n                  to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                  className=\"btn scrumBtn \"\r\n                  style={{ color: \"#FF8C00\" }}\r\n                >\r\n                  Back to Project Board\r\n                </Link>\r\n                <h4 className=\"display-4 text-center scrumLobster\">\r\n                  Update Project Task\r\n                </h4>\r\n                <p className=\"lead text-center scrumBioRhyme\">\r\n                  Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                  {this.state.projectSequence}{\" \"}\r\n                </p>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"text\"\r\n                      className={classnames(\r\n                        \"form-control form-control-lg scrumBioRhyme\",\r\n                        {\r\n                          \"is-invalid\": errors.summary,\r\n                        }\r\n                      )}\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Project Task summary\"\r\n                      name=\"summary\"\r\n                      value={this.state.summary}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.summary && (\r\n                      <MDBAnimation className=\"scrumFlash\" infinite>\r\n                        <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.summary}</h1>\r\n                      </MDBAnimation>\r\n                    )}\r\n                    <label style={{ color: \"#98FB98\" }}>\r\n                      Summary\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"textarea\"\r\n                      style={{ color: \"Chartreuse\" }}\r\n                      material label=\"Acceptance Criteria\"\r\n                      name=\"acceptanceCriteria\"\r\n                      value={this.state.acceptanceCriteria}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label style={{ color: \"#98FB98\" }}>\r\n                      Acceptance Criteria\r\n                    </label>\r\n                  </div>\r\n                  <h6 className=\"scrumLabel\" style={{ color: \"#98FB98\" }}>Due Date</h6>\r\n                  <div className=\"form-group scrumOffside\">\r\n                    <MDBInput\r\n                      type=\"date\"\r\n                      className=\"md-form mdb-react-date_picker\"\r\n                      name=\"dueDate\"\r\n                      value={this.state.dueDate}\r\n                      onChange={this.onChange}\r\n                      style={{ color: \"#98FB98\" }}\r\n                    />\r\n                  </div>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      labelId=\"scrum-select-label\"\r\n                      id=\"scrum-select\"\r\n                      name=\"priority\"\r\n                      value={this.state.priority}\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <MenuItem value={0} style={{ color: \"white\" }}>\r\n                        Select Priority\r\n                      </MenuItem>\r\n                      <MenuItem value={1} style={{ color: \"firebrick\" }}>HIGH</MenuItem>\r\n                      <MenuItem value={2} style={{ color: \"GoldenRod\" }}>MEDIUM</MenuItem>\r\n                      <MenuItem value={3} style={{ color: \"limegreen\" }}>LOW</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: \"MediumSpringGreen\" }}>Select Priority</FormHelperText>\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      labelId=\"scrum-select-status\"\r\n                      id=\"scrum-select\"\r\n                      name=\"status\"\r\n                      value={this.state.status}\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <MenuItem value=\" \" style={{ color: \"firebrick\" }}>\r\n                        Select Status\r\n                      </MenuItem>\r\n                      <MenuItem value=\"TO_DO\" style={{ color: \"GoldenRod\" }}>TO DO</MenuItem>\r\n                      <MenuItem value=\"IN_PROGRESS\" style={{ color: \"DodgerBlue\" }}>IN PROGRESS</MenuItem>\r\n                      <MenuItem value=\"DONE\" style={{ color: \"Green\" }}>DONE</MenuItem>\r\n                    </Select>\r\n                    <FormHelperText style={{ color: \"MediumSpringGreen\" }}>Select Status</FormHelperText>\r\n                  </FormControl>\r\n                  <input\r\n                    type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '2000px', maxHeight: '50px', minWidth: '50px', minHeight: '45px' }}\r\n                  />\r\n                </form>\r\n              </MDBCol>\r\n            </MDBRow>\r\n          </MDBContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"landing-inner\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\" scrumCharmon\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"scrumFuzzyBubbles\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link\r\n                  className=\"btn scrumLabel scrumBtn mr-2\"\r\n                  style={{ maxWidth: '1000px', maxHeight: '50px', minWidth: '250px', minHeight: '45px', color: \"goldenRod\" }}\r\n                  to=\"/register\"\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n                <Link\r\n                  className=\"btn scrumLabel scrumBtn mr-2\"\r\n                  style={{ maxWidth: '1000px', maxHeight: '50px', minWidth: '250px', minHeight: '45px', color: \"goldenRod\" }}\r\n                  to=\"/login\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBAnimation, MDBInputGroup } from \"mdbreact\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol md=\"8 m-auto\">\r\n              <h1 className=\"display-4 text-center scrumLobster\">Sign Up</h1>\r\n              <p className=\"lead text-center scrumLobster\">\r\n                Create your Account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <MDBInput\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.fullName}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <MDBInput\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.username}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <MDBInput\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.password}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\" >\r\n                  <MDBInput\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.confirmPassword}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '1000px', maxHeight: '50px', minWidth: '30px', minHeight: '45px' }} />\r\n              </form >\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import classnames from \"classnames\";\r\nimport { MDBCol, MDBContainer, MDBInput, MDBRow, MDBAnimation } from \"mdbreact\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../actions/securityActions\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol md=\"8 m-auto\">\r\n              <h1 className=\"display-4 text-center scrumLobster\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <MDBInput\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.username}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <MDBInput\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    style={{ color: \"Chartreuse\" }}\r\n                    material label=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <MDBAnimation className=\"scrumFlash\" infinite>\r\n                      <h1 className=\"scrumRockError\" append=\"invalid-feedback \">{errors.password}</h1>\r\n                    </MDBAnimation>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"scrumLabel scrumBtn btn-block\" style={{ maxWidth: '1000px', maxHeight: '50px', minWidth: '30px', minHeight: '45px' }} />\r\n              </form>\r\n            </MDBCol>\r\n          </MDBRow>\r\n        </MDBContainer>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\n// import ToggleColorMode from \"./components/Decoration/darkModeToggleSwitch\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\nimport { MDBRow, MDBCol, MDBInput, MDBBtn, MDBDatePickerV5, MDBContainer, MDBInputGroup } from \"mdbreact\";\r\n\r\n// import ToggleButton from 'react-bootstrap/ToggleButton'\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dark-overlay\">\r\n        <Provider store={store}>\r\n          <Router>\r\n            <div className=\"App\">\r\n              <Header />\r\n              {\r\n                //Public Routes\r\n              }\r\n              <Route exact path=\"/\" component={Landing} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              {\r\n                //Private Routes\r\n              }\r\n              <Switch>\r\n                <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/updateProject/:id\"\r\n                  component={UpdateProject}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/projectBoard/:id\"\r\n                  component={ProjectBoard}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/addProjectTask/:id\"\r\n                  component={AddProjectTask}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                  component={UpdateProjectTask}\r\n                />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}