{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","Link","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d772c8e5.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName,\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifier,\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description,\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks here\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProject/:id\"\r\n                component={UpdateProject}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/projectBoard/:id\"\r\n                component={ProjectBoard}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/addProjectTask/:id\"\r\n                component={AddProjectTask}\r\n              />\r\n              <SecuredRoute\r\n                exact\r\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                component={UpdateProjectTask}\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}