{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","Link","to","className","style","color","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","for","initialState","project_tasks","project_task","action","filter","projectSequence","booleanActionPayload","combineReducers","backlog","backlogReducer","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updatedProject","projectIndentifier","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","selected","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.e585bab8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link\r\n        to=\"/addProject\"\r\n        className=\"btn btn-lg scrumBtn scrumBioRhyme\"\r\n        style={{ color: \"#FF8C00\" }}\r\n      >\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body mb-3 bg-scrummaster\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto scrumSource\">\r\n                {project.projectIdentifier}\r\n              </span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8 scrumOffside\">\r\n              <h3>{project.projectName}</h3>\r\n              <p className=\"scrumBioRhyme\">{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block \">\r\n              <ul className=\"list-group \">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board bg-scrumProjectBoard\">\r\n                    <i\r\n                      className=\"fa fa-flag-checkered pr-1 \"\r\n                      style={{ color: \"#9400D3\" }}\r\n                    >\r\n                      {\" \"}\r\n                      Project Board{\" \"}\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board bg-scrumUpdate\">\r\n                    <i\r\n                      className=\"fa fa-edit pr-1 \"\r\n                      style={{ color: \"#311b92\" }}\r\n                    >\r\n                      Update Project Info\r\n                    </i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1 \"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Input } from \"mdb-ui-kit\";\r\nimport { MDBAnimation } from \"mdbreact\";\r\n// import ToggleColorMode from \"./Decoration/darkModeToggleSwitch\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <MDBAnimation className=\"scrumAnimateRubberBand\">\r\n                <h2 className=\"display-2 text-center scrumCharmon\">\r\n                  Kanban Project\r\n                </h2>\r\n                <h1 className=\"display-9 text-center scrumRockSalt\">\r\n                  Scrum As You Are\r\n                </h1>\r\n              </MDBAnimation>\r\n              <br />\r\n              <CreateProjectButton />\r\n\r\n              <br />\r\n              <hr />\r\n              {projects.map((project) => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1 scrumSource\" />\r\n              {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm bg-scrummaster mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand scrummOffside\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport { MDBAnimation, MDBBtn } from \"mdbreact\";\r\nimport classnames from \"classnames\";\r\n\r\n//Work on handling the errors through css\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"addProject\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center scrumYujiMai\">\r\n                  Create Project form\r\n                </h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group form-floating scrumOffside\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\r\n                        \"form-control form-control-lg bg-scrumButton\",\r\n                        {\r\n                          \"form-control is-invalid\": errors.projectName, //Need to configure the floating Error\r\n                        }\r\n                      )}\r\n                      id=\"floatingInput\"\r\n                      // style={{ color: \"#00FFFF\" }}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                      Project Name\r\n                    </label>\r\n                    {errors.projectName && (\r\n                      <div className=\"form-control invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group form-floating scrumOffside\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\r\n                        \"form-control form-control-lg bg-scrumButton\",\r\n                        {\r\n                          \"form-control is-invalid\": errors.projectIdentifier,\r\n                        }\r\n                      )}\r\n                      // style={{ color: \"#00FFFF\" }}\r\n                      id=\"floatingInput\"\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifier\"\r\n                      value={this.state.projectIdentifier}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifier && (\r\n                      <div className=\"form-control invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n                    <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                      Unique Project ID\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-group scrumOffside form-floating\">\r\n                    <textarea\r\n                      className={classnames(\r\n                        \"form-control form-control-lg bg-scrumButton \",\r\n                        {\r\n                          \"form-control is-invalid\": errors.description,\r\n                        }\r\n                      )}\r\n                      id=\"floatingTextArea\"\r\n                      // style={{ color: \"#00FFFF\" }}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"form-control invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                    <label for=\"floatingTextArea\" style={{ color: \"#98FB98\" }}>\r\n                      Project Description\r\n                    </label>\r\n                  </div>\r\n                  <h6 className=\"scrumNunito\">Start Date</h6>\r\n                  <div className=\"form-group form-floating\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg bg-scrumButton\"\r\n                      name=\"startDate\"\r\n                      id=\"floatingInput\"\r\n                      style={{ color: \"#00FFFF\" }}\r\n                      value={this.state.startDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6 className=\"scrumNunito\">Estimated End Date</h6>\r\n                  <div className=\"form-group form-floating\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg bg-scrumButton\"\r\n                      name=\"endDate\"\r\n                      style={{ color: \"#00FFFF\" }}\r\n                      value={this.state.endDate}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    style={{ color: \"#000000\" }}\r\n                    type=\"submit\"\r\n                    className=\"btn scrumSubmitBtn  btn-block mt-4  hoverable scrumNunito\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { DELETE_PROJECT, GET_PROJECTS, GET_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  validToken: false,\r\n  user: {},\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(updatedProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"addProject\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              {/* <div id=\"shine-background\"> */}\r\n              <h5 className=\"display-4 text-center scrumYujiMai\">\r\n                Update Project\r\n              </h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.projectName,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.projectName}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    placeholder=\"ID cannot be changed\"\r\n                    name=\"projectIndentifier\"\r\n                    value={this.state.projectIndentifier}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <textarea\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.description,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.description}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6 className=\"scrumOffside\">Start Date</h6>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6 className=\"scrumOffside\">Estimated End Date</h6>\r\n                <div className=\"form-group scrumOffside\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn scrumBtn btn-block mt-4  hoverable\"\r\n                />\r\n              </form>\r\n              {/* </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn scrumBtn ml-4\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn bg-scrumDelete ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./types\";\r\n//Fix bug with priority in Spring Boot Server, needs to check null first\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\nexport const getProjectTask =\r\n  (backlog_id, pt_id, history) => async (dispatch) => {\r\n    try {\r\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n      dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n  };\r\nexport const updateProjectTask =\r\n  (backlog_id, pt_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {},\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      });\r\n    }\r\n  };\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id,\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        //PROJECT IDENTIFIER BUG\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n    return (\r\n      <div className=\"projectBoard\">\r\n        <div className=\"container\">\r\n          <Link\r\n            to={`/addProjectTask/${id}`}\r\n            className=\"btn scrumSubmitBtn mb-3 hoverable scrumNunito\"\r\n          >\r\n            <i className=\"fas fa-plus-circle\" style={{ color: \"#000000\" }}>\r\n              {\" \"}\r\n              Create Project Task\r\n            </i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n          {BoardContent}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  //on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${id}`}\r\n                className=\"btn scrumBtn \"\r\n                style={{ color: \"#FF8C00\" }}\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-5 text-center scrumLobster\">\r\n                Add Project Task\r\n              </h4>\r\n              <p className=\"lead text-center scrumBioRhyme\">\r\n                Project Name + Project Code\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group form-floating\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.summary,\r\n                      }\r\n                    )}\r\n                    name=\"summary\"\r\n                    id=\"floatingInput\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.summary}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                    Summary\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group form-floating\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    id=\"floatingTextArea\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <label for=\"floatingTextArea\" style={{ color: \"#98FB98\" }}>\r\n                    Acceptance Criteria\r\n                  </label>\r\n                </div>\r\n                <h6 className=\"scrumBioRhyme\">Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                    style={{ color: \"#98FB98\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group form-floating\">\r\n                  <select\r\n                    className=\"form-select form-control form-control-lg bg-scrumButton\"\r\n                    name=\"priority\"\r\n                    id=\"floatingSelect\"\r\n                    aria-label=\"floating label priority\"\r\n                    style={{ color: \"#98FB98\" }}\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option selected>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                  <label for=\"floatingSelect\" style={{ color: \"#98FB98\" }}>\r\n                    Priority\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-group form-floating\">\r\n                  <select\r\n                    className=\"form-select form-control form-control-lg bg-scrumButton\"\r\n                    name=\"status\"\r\n                    id=\"floatingSelect\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                    style={{ color: \"#98FB98\" }}\r\n                  >\r\n                    <option selected>Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                  <label for=\"floatingSelect\" style={{ color: \"#98FB98\" }}>\r\n                    Status\r\n                  </label>\r\n                </div>\r\n\r\n                <input\r\n                  style={{ color: \"#000000\" }}\r\n                  type=\"submit\"\r\n                  className=\"btn scrumSubmitBtn  btn-block mt-5 scrumNunito\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At,\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn scrumBtn\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center scrumLobster\">\r\n                Update Project Task\r\n              </h4>\r\n              <p className=\"lead text-center scrumBioRhyme\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}{\" \"}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group form-floating  scrumOffside\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton scrumBioRhyme\",\r\n                      {\r\n                        \"is-invalid\": errors.summary,\r\n                      }\r\n                    )}\r\n                    id=\"floatingInput\"\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    style={{ color: \"#00ffff\" }}\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                    Project Task summary\r\n                  </label>\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group  form-floating scrumOffside\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    id=\"floatingTextArea\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    style={{ color: \"#00ffff\" }}\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <label for=\"floatingTextArea\" style={{ color: \"#98FB98\" }}>\r\n                    Acceptance Criteria\r\n                  </label>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group  form-floating scrumOffside\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                    style={{ color: \"#00ffff\" }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group form-floating  scrumOffside\">\r\n                  <select\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"priority\"\r\n                    id=\"floatingSelect\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                    style={{ color: \"#00ffff\" }}\r\n                  >\r\n                    <option selected>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                  <label for=\"floatingSelect\" style={{ color: \"#98FB98\" }}>\r\n                    Priority\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-group form-floating scrumOffside\">\r\n                  <select\r\n                    className=\"form-control form-control-lg bg-scrumButton\"\r\n                    name=\"status\"\r\n                    id=\"floatingSelect\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                    style={{ color: \"#00ffff\" }}\r\n                  >\r\n                    <option selected>Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                  <label for=\"floatingSelect\" style={{ color: \"#98FB98\" }}>\r\n                    Status\r\n                  </label>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn scrumSubmitBtn  btn-block mt-4  hoverable scrumNunito\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-5 scrumCharmon\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead display-5 scrumFuzzyBubbles\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link\r\n                  className=\"btn scrumBtn scrumBioRhyme mr-2\"\r\n                  style={{ color: \"#FF8C00\" }}\r\n                  to=\"/register\"\r\n                >\r\n                  Sign Up\r\n                </Link>\r\n                <Link\r\n                  className=\"btn scrumSubmitBtn mr-2 hoverable scrumNunito\"\r\n                  to=\"/login\"\r\n                  style={{ color: \"#000000\" }}\r\n                >\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center scrumLobster\">Sign Up</h1>\r\n              <p className=\"lead text-center scrumLobster\">\r\n                Create your Account\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.fullName,\r\n                      }\r\n                    )}\r\n                    id=\"floatingInputInvalid\"\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.fullName}\r\n                    </div>\r\n                  )}\r\n                  <label\r\n                    for=\"floatingInputInvalid\"\r\n                    style={{ color: \"#98FB98\" }}\r\n                  >\r\n                    Full Name\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    id=\"floatingInput\"\r\n                    type=\"text\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.username,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.username}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                    Email Address (Username)\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.password,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    id=\"floatingPassword\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.password}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingPassword\" style={{ color: \"#98FB98\" }}>\r\n                    Password\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.confirmPassword,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    id=\"floatingPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"form-control invalid-feedback \">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingPassword\" style={{ color: \"#98FB98\" }}>\r\n                    Confirm Password\r\n                  </label>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn scrumSubmitBtn btn-block mt-4 hoverable scrumNunito\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center scrumLobster\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    type=\"email\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    id=\"floatingInput\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.username,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.username}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingInput\" style={{ color: \"#98FB98\" }}>\r\n                    Email Address\r\n                  </label>\r\n                </div>\r\n                <div className=\"form-group form-floating scrumOffSide\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\r\n                      \"form-control form-control-lg bg-scrumButton\",\r\n                      {\r\n                        \"form-control is-invalid\": errors.password,\r\n                      }\r\n                    )}\r\n                    placeholder=\"Password\"\r\n                    style={{ color: \"#00FFFF\" }}\r\n                    id=\"floatingPassword\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"form-control invalid-feedback\">\r\n                      {errors.password}\r\n                    </div>\r\n                  )}\r\n                  <label for=\"floatingPassword\" style={{ color: \"#98FB98\" }}>\r\n                    Password\r\n                  </label>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn scrumSubmitBtn btn-block mt-4 hoverable scrumNunito\"\r\n                  style={{ color: \"#000000\" }}\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\n// import ToggleColorMode from \"./components/Decoration/darkModeToggleSwitch\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n  const decoded_jwtToken = jwt_decode(jwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken,\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decoded_jwtToken.exp < currentTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dark-overlay \">\r\n        <Provider store={store}>\r\n          <Router>\r\n            <div className=\"App\">\r\n              <Header />\r\n              {\r\n                //Public Routes\r\n              }\r\n              <Route exact path=\"/\" component={Landing} />\r\n              <Route exact path=\"/register\" component={Register} />\r\n              <Route exact path=\"/login\" component={Login} />\r\n              {\r\n                //Private Routes\r\n              }\r\n              <Switch>\r\n                <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n                <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/updateProject/:id\"\r\n                  component={UpdateProject}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/projectBoard/:id\"\r\n                  component={ProjectBoard}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/addProjectTask/:id\"\r\n                  component={AddProjectTask}\r\n                />\r\n                <SecuredRoute\r\n                  exact\r\n                  path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n                  component={UpdateProjectTask}\r\n                />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"mdb-react-ui-kit/dist/css/mdb.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}